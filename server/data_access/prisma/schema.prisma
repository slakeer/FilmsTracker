// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model User {
  id             Int             @id @default(autoincrement())
  name           String
  email          String          @unique
  password       String
  reviews        Review[]
  favoriteMovies FavoriteMovie[]
  watchedMovies  WatchedMovie[]
}

model Actor {
  id            Int          @id @default(autoincrement())
  actor_name    String
  actor_surname String
  actorMovies   ActorMovie[]
}

model Genre {
  id         Int     @id @default(autoincrement())
  genre_name String
  movies     Movie[]
}

model Director {
  id               Int     @id @default(autoincrement())
  director_name    String
  director_surname String
  movies           Movie[]
}

model Movie {
  id             Int             @id @default(autoincrement())
  title          String
  genre_id       Int
  release_year   Int
  description    String
  rating         Float
  director_id    Int
  genre          Genre           @relation(fields: [genre_id], references: [id])
  director       Director        @relation(fields: [director_id], references: [id])
  reviews        Review[]
  actorMovies    ActorMovie[]
  favoriteMovies FavoriteMovie[]
  watchedMovies  WatchedMovie[]
}

model Review {
  id          Int      @id @default(autoincrement())
  movie_id    Int
  user_id     Int
  rating      Float
  review_text String
  review_date DateTime
  movie       Movie    @relation(fields: [movie_id], references: [id])
  user        User     @relation(fields: [user_id], references: [id])
}

model ActorMovie {
  id       Int   @id @default(autoincrement())
  actor_id Int
  movie_id Int
  movie    Movie @relation(fields: [movie_id], references: [id])
  actor    Actor @relation(fields: [actor_id], references: [id])
}

model FavoriteMovie {
  id       Int   @id @default(autoincrement())
  user_id  Int
  movie_id Int
  movie    Movie @relation(fields: [movie_id], references: [id])
  user     User  @relation(fields: [user_id], references: [id])
}

model WatchedMovie {
  id       Int   @id @default(autoincrement())
  user_id  Int
  movie_id Int
  movie    Movie @relation(fields: [movie_id], references: [id])
  user     User  @relation(fields: [user_id], references: [id])
}
